{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { VehicleFormComponent } from './vehicle-form/vehicle-form.component';\nimport { VehicleService } from './services/vehicle.service';\nimport { AppErrorHandler } from './app.error-handler';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, NavMenuComponent, HomeComponent, CounterComponent, FetchDataComponent, VehicleFormComponent],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, FormsModule, ErrorHandlingModule.forRoot(), BrowserAnimationsModule, ToastrModule.forRoot({\n    timeOut: 1000,\n    positionClass: 'toast-bottom-right'\n  }), RouterModule.forRoot([{\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  }, {\n    path: 'vehicles/new',\n    component: VehicleFormComponent\n  }, {\n    path: 'counter',\n    component: CounterComponent\n  }, {\n    path: 'fetch-data',\n    component: FetchDataComponent\n  }])],\n  providers: [{\n    provide: ErrorHandler,\n    useClass: AppErrorHandler\n  }, VehicleService],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module"}